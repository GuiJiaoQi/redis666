package com.bjpowernode.crm.workbench.mapper;

import com.bjpowernode.crm.workbench.domain.Activity;

import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 23 15:59:14 CST 2020
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 23 15:59:14 CST 2020
     */
    int insert(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 23 15:59:14 CST 2020
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 23 15:59:14 CST 2020
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 23 15:59:14 CST 2020
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat May 23 15:59:14 CST 2020
     */
    int updateByPrimaryKey(Activity record);
    //创建新的市场活动
    int insertActivity(Activity activity);
    //查询市场活动列表按多条件查询和分页
    List<Activity>selectActivityForPageByCondition(Map<String,Object>map);
    //根据条件查询市场活动的数量
    long selectCountOfActivityByCondition(Map<String,Object>map);
    //根据id查询市场活动
    Activity selectActivityById(String id);
    //保存修改的市场活动
    int updateActivity(Activity activity);
    //根据ids进行批量删除市场活动
    int deleteActivityByIds(String[] ids);
    //导出时要抓住市场表的所有数据
    List<Activity>selectActivityForDetailByIds(String[] ids);
    //导入时要把excel表中的多个市场活动导入到数据库中的市场活动表
    int insertActivityByList(List<Activity>activityList);
    //进入详情页面
    Activity selectActivityForDetailById(String id);
    //在其他模块中需要市场模块的支持
    List<Activity>selectAllActivityForDetail();
    //根据市场活动名称查询所有的市场活动
    List<Activity>selectActivityForDetailByName(String name);
    //根据clueId查询与线索相关的市场活动
    List<Activity>selectActivityForDetailByClueId(String id);
    /*//页面展示
    List<Activity>selectAllActivity();*/
    //查询不属于线索的活动模块
    List<Activity>selectActivityNoBoundById(Map<String,Object>map);


   /* //通过与线索关联的市场活动取出对应的市场活动对象
    List<Activity>selectActivityForDetailByIds(String[] ids);*/
}